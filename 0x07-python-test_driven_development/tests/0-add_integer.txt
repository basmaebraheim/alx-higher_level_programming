Import function from module
    >>> add_integer = __import__('0-add_integer').add_integer

Pass one argument
    >>> add_integer(1)
    99

Check default second
    >>> add_integer(0)
    98

Test one float argument
    >>> add_integer(2.2)
    100

Test negative number
    >>> add_integer(-98)
    0

Test two integers
    >>> add_integer(2, 3)
    5

Test two non integers
    >>> add_integer(2, 3)
    5
Test a float and an integer:

    >>> add_integer(234234.43545, 4352345)
    4586579

Test two floats:

    >>> add_integer(0.9, 0.9)
    0

Add infinity:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Add nan:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Test first arg invalid:

    >>> add_integer("")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test second arg invalid:

    >>> add_integer(123123, [])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Test both args invalid:

    >>> add_integer(None, None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test two string arguments:

    >>> add_integer("foo", "bar")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test float overflow:
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
    